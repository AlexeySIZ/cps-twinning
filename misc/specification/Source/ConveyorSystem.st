TYPE
  datatype1 : STRUCT
    Enable : BOOL;
    Velocity : INT;
    JogForward : BOOL;
    JogBackward : INT;
    Axis : WORD;
    CountUp : BOOL;
    CountDown : BOOL;
    IncreaseSpeed : BOOL;
    DecreaseSpeed : BOOL;
    ResetCounter : BOOL;
    LoadInput : BOOL;
    Frequency : BOOL;
  END_STRUCT;
  datatype0 : STRUCT
    Busy : BOOL;
    Counter : INT;
    Error : BOOL;
    ErrorID : WORD;
    ErrorInfo : WORD;
    VelocityReached : BOOL;
  END_STRUCT;
END_TYPE

PROGRAM program0
  VAR
    ControlDB : datatype1;
    ENABLE : BOOL;
    PTO : BOOL;
    MonitorDB : datatype0;
  END_VAR
  VAR
    Q10 AT %Q1.0 : BOOL;
    Q00 AT %Q0.0 : BOOL;
    START AT %M0.0 : BOOL;
    STOP AT %M0.1 : BOOL;
	Velocity AT %MW0.2 : INT;
  END_VAR

  INITIAL_STEP Begin:
  END_STEP

  TRANSITION FROM Begin TO stpSetVelocity
    := TRUE;
  END_TRANSITION

  STEP stpSetVelocity:
    STPSETVELOCITY_INLINE1(N);
  END_STEP

  ACTION STPSETVELOCITY_INLINE1:
    ControlDB.Velocity := Velocity;
  END_ACTION

  TRANSITION FROM stpSetVelocity TO stpMotorControlDisabled
    := ENABLE = FALSE;
  END_TRANSITION

  STEP stpMotorControlDisabled:
    STPMOTORCONTROLDISABLED_INLINE2(N);
    STPMOTORCONTROLDISABLED_INLINE3(N);
    STPMOTORCONTROLDISABLED_INLINE4(N);
  END_STEP

  ACTION STPMOTORCONTROLDISABLED_INLINE2:
    ControlDB.Enable := FALSE;
  END_ACTION

  ACTION STPMOTORCONTROLDISABLED_INLINE3:
    PTO := FALSE;
  END_ACTION

  ACTION STPMOTORCONTROLDISABLED_INLINE4:
    ControlDB.JogForward := FALSE;
  END_ACTION

  TRANSITION FROM stpMotorControlDisabled TO stpMotorControlSet
    := TRUE;
  END_TRANSITION

  STEP stpMotorControlSet:
  END_STEP

  TRANSITION FROM stpMotorControlSet TO stpSetQ00True
    := START = TRUE AND STOP = FALSE;
  END_TRANSITION

  STEP stpSetQ00True:
    STPSETQ00TRUE_INLINE8(N);
  END_STEP

  ACTION STPSETQ00TRUE_INLINE8:
    Q00 := TRUE;
  END_ACTION

  TRANSITION FROM stpSetQ00True TO stpSetEnable
    := TRUE;
  END_TRANSITION

  STEP stpSetEnable:
    STPSETENABLE_INLINE11(N);
    STPSETENABLE_INLINE12(N);
  END_STEP

  ACTION STPSETENABLE_INLINE11:
    Q10 := PTO;
  END_ACTION

  ACTION STPSETENABLE_INLINE12:
    ENABLE := Q00;
  END_ACTION

  TRANSITION FROM stpSetEnable TO Begin
    := TRUE;
  END_TRANSITION

  TRANSITION FROM stpMotorControlSet TO stpSetQ00False0
    := START = FALSE AND STOP = TRUE;
  END_TRANSITION

  STEP stpSetQ00False0:
    STPSETQ00FALSE0_INLINE9(N);
  END_STEP

  ACTION STPSETQ00FALSE0_INLINE9:
    Q00 := FALSE;
  END_ACTION

  TRANSITION FROM stpSetQ00False0 TO stpSetEnable
    := TRUE;
  END_TRANSITION

  TRANSITION FROM stpMotorControlSet TO stpSetQ00False1
    := NOT (START = TRUE AND STOP = FALSE) AND NOT (START = FALSE AND STOP = TRUE);
  END_TRANSITION

  STEP stpSetQ00False1:
    STPSETQ00FALSE1_INLINE10(N);
  END_STEP

  ACTION STPSETQ00FALSE1_INLINE10:
    Q00 := FALSE;
  END_ACTION

  TRANSITION FROM stpSetQ00False1 TO stpSetEnable
    := TRUE;
  END_TRANSITION

  TRANSITION FROM stpSetVelocity TO stpMotorControlEnabled
    := ENABLE = TRUE;
  END_TRANSITION

  STEP stpMotorControlEnabled:
    STPMOTORCONTROLENABLED_INLINE5(N);
    STPMOTORCONTROLENABLED_INLINE6(N);
    STPMOTORCONTROLENABLED_INLINE7(N);
  END_STEP

  ACTION STPMOTORCONTROLENABLED_INLINE5:
    ControlDB.Enable := TRUE;
  END_ACTION

  ACTION STPMOTORCONTROLENABLED_INLINE6:
    PTO := TRUE;
  END_ACTION

  ACTION STPMOTORCONTROLENABLED_INLINE7:
    ControlDB.JogForward := TRUE;
  END_ACTION

  TRANSITION FROM stpMotorControlEnabled TO stpMotorControlSet
    := TRUE;
  END_TRANSITION

END_PROGRAM


CONFIGURATION config

  RESOURCE resource1 ON PLC
    TASK TaskMain(INTERVAL := T#50ms,PRIORITY := 0);
    PROGRAM inst0 WITH TaskMain : program0;
  END_RESOURCE
END_CONFIGURATION
